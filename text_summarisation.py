# -*- coding: utf-8 -*-
"""Text_Summarisation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10jlREomqnRHmFH7T9A_YjjHMG2CpF5Sv
"""

# Install required libraries
!pip install transformers
!pip install PyMuPDF
!pip install gradio

# Import libraries
import fitz  # PyMuPDF
from transformers import pipeline
import gradio as gr
from google.colab import files

# Upload PDF
uploaded = files.upload()

# Read uploaded file (assuming only one)
filename = next(iter(uploaded))
doc = fitz.open(filename)

# Extract full text from all pages
pdf_text = ""
for page in doc:
    pdf_text += page.get_text()

# Initialize summarizer model
summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

# ðŸ”§ Custom min/max length
min_len = 50
max_len = 200

# Summarize (chunked to handle long text)
chunks = [pdf_text[i:i+1000] for i in range(0, len(pdf_text), 1000)]
summary = ""

for chunk in chunks:
    result = summarizer(chunk, max_length=max_len, min_length=min_len, do_sample=False)
    summary += result[0]['summary_text'] + "\n"

# Print and save summary
print("\nðŸ“„ Summary:\n", summary)

with open("summary.txt", "w") as f:
    f.write(summary)

files.download("summary.txt")

# Define function for Gradio
def summarize_text(text, min_len, max_len):
    chunks = [text[i:i+1000] for i in range(0, len(text), 1000)]
    summary = ""
    for chunk in chunks:
        result = summarizer(chunk, max_length=max_len, min_length=min_len, do_sample=False)
        summary += result[0]['summary_text'] + "\n"
    return summary

# Launch Gradio interface
gr.Interface(
    fn=summarize_text,
    inputs=[gr.Textbox(label="Input Text"),
            gr.Slider(30, 300, label="Min Length"),
            gr.Slider(60, 512, label="Max Length")],
    outputs="text",
    title="Text Summarizer using LLM (BART)"
).launch()